/*===== VARIABLES CSS =====*/
:root {
    --header-height: 3rem;
    
    /*===== Colores =====*/
    --first-color: #034C8C;
    --dark-color: #034C8C;
    --dark-color-alt: #282B3A;
    --white-color: #FFFFFF;
    --hover-color: #F7F7F7;
  
    /*===== Fuente y tipografia =====*/
    --body-font: 'Cambria', sans-serif;
    --normal-font-size: .938rem;
    --small-font-size: .813rem;
  
    /*===== z index =====*/
    --z-fixed: 100;

    /*===== font size =====*/
    --font-size: 15px;
  }




body{
    margin-top: 3.5rem;
    padding: 0;
    background-color: #FFFFFF !important;
    min-height: 100vh;
    max-width: 100%;
    flex-direction: column;
    align-items: center;
    font-size: var(--font-size);
}

#title1{
    margin: 6% 2% 5% 5%;
}

main{
    padding: 5%;
}

.card {
    max-width: 260px !important;
    width: 100%;
    max-height: 270px !important;
    height: 100%;
    background-color: #f9f9f9;
    border: 1px solid #ddd;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    padding: 1%;
    margin: 1%;
    font-family: Arial, sans-serif;
    color: #333;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}
.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
}

.card-title, .card-subtitle{
    font-size: 1.2rem;
    font-weight: bold;
    margin-bottom: 1%;
}

.card-text{
    font-size: 1rem;
    margin-bottom: 1%;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 4;      /* Cambia este número según cuántas líneas quieras mostrar */
    -webkit-box-orient: vertical;
    max-width: 100%;
    /* background-color: aqua;  quítalo si no lo necesitas */
    white-space: normal;         /* Permite varias líneas */
}

.card-p {
    color: white;
    font-size: 80%;
    margin-top: 4%;
    margin-bottom: 4%;
    background-color: #3B82F6;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
    border-radius: 6px;
    padding: 2%;
    justify-content: center;
    display: flex;
}

.card-button{
    background-color: #3B82F6;
    color: white;
    border: none;
    border-radius: 7px;
    padding: 3%;
    width: 50%;
    display: flex;
    justify-content: center;
    justify-self: center;
    font-size: 90%;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

/* Estilos para el modal */
.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.5);
  z-index: 9999;
  align-items: center;
  justify-content: center;
}

.modal-content {
    margin: auto; /* Centra el modal, Bootstrap .modal-dialog suele manejar esto */
    background: #fff;
    border-radius: 8px;
    /* width: 56%; */ /* Comentado: .modal-xl (usado en tus DataTables modales) ya define el ancho. Esto podría ser para otros modales más pequeños. */
    /* height: 110%; */ /* Eliminado: Esto puede causar que el header se oculte o desplace. */
    max-height: 90vh; /* Limita la altura máxima del modal al 90% del alto de la ventana gráfica. */
    display: flex;
    flex-direction: column;
    /* justify-content: center; */ /* Eliminado: Puede empujar el título hacia abajo si el contenido es corto. */
    position: relative;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.25);
    /* padding-top: 5%; */ /* Eliminado: Esto empuja el contenido, incluido el header, hacia abajo. */
    overflow: hidden; /* Evita que .modal-content haga scroll; el scroll debe estar en .modal-body. */
    /* Los paddings generales es mejor aplicarlos al .modal-body o .modal-header/.modal-footer específicamente */
}

/* Asegura que el header y footer del modal no se encojan y tomen su altura natural */
.modal-content .modal-header,
.modal-content .modal-footer {
    flex-shrink: 0;
    padding: 1rem; /* Padding estándar de Bootstrap para header/footer */
}

.modal-content .modal-body {
    overflow-y: auto; /* Permite el scroll vertical solo en el cuerpo del modal */
    flex-grow: 1; /* Permite que el cuerpo del modal ocupe el espacio disponible */
    padding: 1rem; /* Padding para el contenido del cuerpo del modal */
}

.close-button {
  position: absolute;
  top: 10px;
  right: 15px;
  cursor: pointer;
  font-size: 28px;
  z-index: 99;
}

.modal-buttons {
    display: flex;
    z-index: 2;
    margin-bottom: 2%;
    flex-direction: row !important;
    gap: 10px;
}

.save-pdf-button {
  background-color: #3B82F6;
  color: white;
  border-radius: 10px;
  border: none;
  padding: 8px 18px;
  cursor: pointer;
}

#approveBtn {
  background-color: #22c55e; /* verde */
  color: white;
  border-radius: 10px;
  border: none;
  padding: 8px 18px;
  cursor: pointer;
}

#rejectBtn {
  background-color: #ef4444; /* rojo */
  color: white;
  border-radius: 10px;
  border: none;
  padding: 8px 18px;
  cursor: pointer;
}

.svg-frame {
    position: relative;
    width: 100% !important;
    height: 100% !important;
    background: none;
    box-shadow: #333 0px 0px 0px 1px inset;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Opcional: Asegura que el SVG no se desborde */
.svg-frame svg {
    display: block;
    max-width: 100%;
    max-height: 100%;
    height: auto;
    width: auto;
    margin: 0 auto;
    object-fit: contain;
}

/* Asegurar que SweetAlert aparezca por encima del modal */
.swal-on-top {
    z-index: 99999 !important;
}

/* Puedes poner esto en tu archivo CSS */
.moneda-activa {
    background-color: #007bff !important;
    color: #fff !important;
}

#card {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
    gap: 24px;
    justify-items: center;
    align-items: stretch;
    width: 100%;
    max-width: 1400px;
    margin: 0 auto;
}

#DescriptionAndRootCauseValue{
    font-size: 1.2rem;
    font-weight: bold;
    margin-bottom: 1%;
    color: white;
}

/* Ajustes específicos para el modal del SVG (#myModal) */
#myModal .modal-content {
    width: 85%; /* Ajusta el ancho según necesites para el SVG */
    max-width: 1200px; /* Un máximo razonable */
    /* Hereda display: flex, flex-direction: column, max-height, overflow: hidden
       de la regla general .modal-content, lo cual está bien. */
}

#myModal .modal-buttons {
    flex-shrink: 0; /* Evita que la sección de botones se encoja */
    padding: 1rem; /* Espaciado interno */
    /* Tus estilos existentes para display: flex y gap deberían funcionar aquí */
    border-bottom: 1px solid #dee2e6; /* Línea separadora opcional */
}

/* Contenedor de la previsualización del SVG dentro de #myModal */
#myModal #svgPreview.svg-frame {
    flex-grow: 1; /* Permite que esta área crezca para ocupar el espacio vertical disponible */
    min-height: 0; /* MUY IMPORTANTE para que flex-grow funcione correctamente y permita encoger si es necesario */
    padding: 1rem; /* Espacio alrededor del SVG */
    box-sizing: border-box; /* Para que el padding no aumente el tamaño total */
    
    /* display: flex, align-items, justify-content ya están en la regla .svg-frame general
       y son buenos para centrar el SVG hijo. */
    /* Eliminamos la altura fija porcentual para que flex-grow la maneje */
    /* height: 105% !important; <-- Esto se elimina o se sobrescribe */
    height: 100%; /* Ocupa el 100% del espacio asignado por flex-grow */

    /* Los siguientes estilos vienen de tu regla .svg-frame original y están bien aquí: */
    position: relative;
    width: 100% !important; /* Asegura que ocupe todo el ancho disponible en el layout flex */
    background: none;
    box-shadow: #333 0px 0px 0px 1px inset;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* El elemento SVG dentro de #svgPreview */
#myModal #svgPreview.svg-frame svg {
    display: block;
    max-width: 100%;
    max-height: 100%;
    width: auto;  /* Mantiene la relación de aspecto */
    height: auto; /* Mantiene la relación de aspecto */
    object-fit: contain; /* Asegura que todo el SVG sea visible, escalado para caber */
}